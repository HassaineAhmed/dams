generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

enum sizeSystems {
  letters
  numbers
}

model ImageName {
  id         String    @id @default(uuid())
  imageName  String    @unique
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  product    Product?  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String?
  categoryId String?
}

model Product {
  id           String      @id @default(uuid())
  name         String      @unique
  price        Float       @default(0)
  imagesNames  ImageName[]
  isAvailable  Boolean     @default(false)
  isComingSoon Boolean     @default(false)
  isTrending   Boolean     @default(false)
  isForMen     Boolean
  isForWomen   Boolean
  isNewArrival Boolean     @default(true)
  design       String      @default("")
  fit          String      @default("")
  model        String      @default("")
  orders       Order[]
  category     Category    @relation(references: [name], fields: [categoryName], onDelete: Cascade)
  categoryName String
}

model Category {
  id           String      @id @default(uuid())
  name         String      @unique
  sizingSystem sizeSystems
  Product      Product[]
  imageName    ImageName[]
}

model Order {
  id                Int      @id @default(autoincrement())
  productName       String
  fullName          String
  phoneNumber       Int
  secondPhoneNumber Int?
  wilaya            String
  fullAdress        String
  quantity          Int
  size              String
  color             String?
  createdAt         DateTime
  codePromo         String
  price             Int
  isPaid            Boolean  @default(false)
  isReturned        Boolean  @default(false)
  revenue           Int      @default(0)
  product           Product  @relation(fields: [productName], references: [name], onDelete: Cascade)
}

model CodePromo {
  id         Int    @id @default(autoincrement())
  codePromo  String
  count      Int
  percentage Int
  profit     Int

  @@unique([codePromo])
}

model FAQ {
  id       String @id @default(uuid())
  question String
  answer   String
}

model Feedback {
  id          String   @id @default(uuid())
  name        String
  email       String
  phoneNumber Int?
  message     String
  date        DateTime
}
